从实验观察下来，4种GC在 Xmx 比较大的时候，例如4G，GC的执行时间和内存的分配区分并不大；Xmx 比较小的时候，例如128M，GC效率都不高。
串行GC：使用单线程做GC，在GC时会暂停业务线程，因此每次GC的STW的时间是4种GC策略中最长的。
并行GC：使用多线程做GC，在GC时虽然也会暂停业务线程，但是由于充分利用了机器的多核cpu，因此每次GC的STW的时间比串行GC要短，且在不执行GC的时候，不会占用任何业务线程，因此可以获得更好的吞吐率。适合对吞吐率要求高，但对延迟时间有一定容忍的应用场景。
CMS：CMS属于并发GC，它会有专门的线程来做并发标记、并发预清理等，这些工作是和业务线程并行运行的，因此会占用掉一些原本可以用来跑业务的线程资源，这导致了CMS的GC吞吐率比并行GC要低些，但是由于部分工作已经并发完成了，因此在STW的时候，只需要处理部分剩下的工作，整个延迟就比并行GC低了。适合低延迟，但对吞吐率有一定容忍的应用场景。
G1：G1从日志观察下来，是4种策略中最为复杂的一种，整个效果和CMS比较像。最大的优势可能是可以灵活调配各类参数，以及它的随应用运行一段时间后能自己调整并优化GC的能力。